git init 	  - создает локальный репозиторий
git clone      - клонирует удаленный репозиторий
git add 	  - индексирует файл (После индексации его можно использовать в commit, т.е. сохранении локального снимка)
git commit   - делает локальный снимок
git status      - показывает статус файлов, наименование ветки и другую полезную информацию
git branch    - служит для работы с ветками (просмотр, создание, удаление и т.д.)
git checkout - нужен для смены веток (если находишься на ветке В и захотел перейти на ветку С)
git push       - используется когда нужно отправить локальную ветку на удаленный репозиторий
git pull	  - нужен для получение данных с удаленного репозитория и слияния их с твоей веткой (могут возникнуть конфликты)
git fetch	  - нужен для получения данных с удаленного репозитория без слияния
git merge	  - позволяет слить две ( иногда больше ) ветки (могут возникнуть конфликты) 
git rebase	  - своебразная альтернатива git merge, но со своей особенностью (также могут возникать конфликты) 
git log 	  - показывает историю работы с веткой 
git diff 	  - покажет какие изменения произошли по сравнению с пред. коммитом (работает с индексированным, но еще не закоммиченным файлом)
git remote    - покажет какие удаленные репозитории подключены

Самые базовые комманды для работы с гитом. Их, конечно, больше, но, по сути, нужны: git add, git commit, git branch, git push, git pull, git status, git checkout.
Также здесь показаны только наименования комманд, для большего упрощения работы с ними нужно посмотреть флаги для каждой комманды отдельно. Например "git add . " добавляет/индексирует все файлы без надобности прописи их всех. А git commit -m позволяет писать комментарий к коммиту без открытия внутреннего редактора (vim, emacs и т.д.). 

